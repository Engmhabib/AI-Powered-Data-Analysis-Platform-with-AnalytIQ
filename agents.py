# agents.py
import dspy
import logging

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Doer Agent: Data Visualization
class DataVizAgent(dspy.Signature):
    """
    AI agent that generates Plotly visualizations based on user queries.
    """
    goal = dspy.InputField(desc="User-defined goal including data and desired chart.")
    dataset = dspy.InputField(desc="Information about the data in the dataframe.")
    styling_index = dspy.InputField(desc='Instructions on how to style Plotly plots.')
    code = dspy.OutputField(desc="Plotly code to visualize the user's request.")
    commentary = dspy.OutputField(desc="Comments explaining the analysis performed.")

# Helper Agent: Code Fix
class CodeFixAgent(dspy.Signature):
    """
    AI agent that fixes faulty code generated by doer agents.
    """
    faulty_code = dspy.InputField(desc="Faulty code that needs fixing.")
    previous_code_fixes = dspy.InputField(desc="Previous attempts to fix the code.")
    error = dspy.InputField(desc="Error generated by the faulty code.")
    
    faulty_code = dspy.OutputField(desc="Original faulty code.")
    fixed_code = dspy.OutputField(desc="Corrected code.")

# Planner Agent: Query Routing
class PlannerAgent(dspy.Signature):
    """
    AI agent that routes user queries to the appropriate doer agents.
    """
    query = dspy.InputField(desc="User's analysis request.")
    routed_agents = dspy.OutputField(desc="Agents designated to handle the query.")
